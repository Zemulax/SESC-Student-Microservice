server:
  port: 8080

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive  # You are using WebFlux, so this is correct
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins:
              - "http://localhost:81"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers: "*"
        add-to-simple-url-handler-mapping: true
      discovery:
        locator:
          enabled: true  # Enable dynamic route discovery from Eureka
      loadbalancer:
        retry:
          enabled: true  # Enables retry mechanism for failed requests
      routes:
        - id: student-service-route
          uri: lb://student-service  # Using service discovery (Eureka)
          predicates:
            - Path=/student/**  # This will match all requests to /student/** (POST, GET, PUT, DELETE)
        - id: topic-service-route
          uri: lb://topic-service  # Using service discovery (Eureka)
          predicates:
            - Path=/topic/**  # This will match all requests to /topic/** (POST, GET, PUT, DELETE)
        - id: course-service-route
          uri: lb://student-service
          predicates:
            - Path=/courses/** #match all requests to course controller


eureka:
  client:
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka  # Eureka server address
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
